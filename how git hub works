PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git --version
git version 2.37.2.windows.2
PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git remote add origin https://github.com/Wakandas-1st-Heero/developerX_Shit.git
fatal: not a git repository (or any of the parent directories): .git
PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git init
Initialized empty Git repository in F:/Coding with Strangers/Twitchbot/perfectstrangerbot/.git/
PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git remote add origin https://github.com/Wakandas-1st-Heero/developerX_Shit.git
PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git add.
git: 'add.' is not a git command. See 'git --help'.

PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.

PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot> git push -u origin master
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 16 threads
Compressing objects: 100% (8/8), done.
Writing objects: 100% (9/9), 2.72 KiB | 1.36 MiB/s, done.
Total 9 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/Wakandas-1st-Heero/developerX_Shit/pull/new/master
remote:
To https://github.com/Wakandas-1st-Heero/developerX_Shit.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.
PS F:\Coding with Strangers\Twitchbot\perfectstrangerbot>



try 
Other stuff


import requests

client_id = 'your_client_id'
client_secret = 'your_client_secret'

auth_response = requests.post('https://id.twitch.tv/oauth2/token', {
  'client_id': client_id,
  'client_secret': client_secret,
  'grant_type': 'client_credentials'
})

auth_response.raise_for_status()
auth_response_json = auth_response.json()

access_token = auth_response_json['access_token']


headers = {
  'Authorization': f'Bearer {access_token}'
}